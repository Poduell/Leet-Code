/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(k==0)return head;
        Deque<Integer> list = new ArrayDeque<>();
        while(head!=null){
            ListNode node=head;
            list.addLast(node.val);
            head=head.next;
        }
        if(list.size()==0)return head;
        for(int i=0;i<k%list.size();i++){
            list.addFirst(list.removeLast());
        }
        ListNode dummy=new ListNode(0);
        ListNode copy=dummy;
        while (!list.isEmpty()) {
            dummy.next = new ListNode(list.removeFirst());
            dummy = dummy.next;
        }
        return copy.next;
    }
}
