class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int m=triangle.size();
        int diyiceng=triangle.get(0).get(0);
        if(m==1){
            return diyiceng;
        }
        int dierceng1=triangle.get(0).get(0)+triangle.get(1).get(0);
        int dierceng2=triangle.get(0).get(0)+triangle.get(1).get(1);
        if(m==2){
            return Math.min(dierceng1,dierceng2);
        }
        List<List<Integer>> dp=new ArrayList<>();
        List<Integer> list1=new ArrayList<>();
        list1.add(diyiceng);
        dp.add(list1);
        List<Integer> list2=new ArrayList<>();
        list2.add(dierceng1);
        list2.add(dierceng2);
        dp.add(list2);
        for(int i=2;i<m;i++){
            List<Integer> list=new ArrayList<>();
            list.add(dp.get(i-1).get(0)+triangle.get(i).get(0));
            for(int j=1;j<i;j++){
                int max=triangle.get(i).get(j)+dp.get(i-1).get(j-1);
                int min=triangle.get(i).get(j)+dp.get(i-1).get(j);
                list.add(Math.min(max,min));
            }
            list.add(dp.get(i-1).get(i-1)+triangle.get(i).get(i));
            dp.add(list);
        }
        int minone=Integer.MAX_VALUE;
        for(int i:dp.get(m-1)){
            minone=Math.min(i,minone);
        }
        return minone;
    }
}
