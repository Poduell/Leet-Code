class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        if (head == null || k == 1) {
            return head;
        }
        
        List<ListNode> list = new ArrayList<>();
        ListNode current = head;
        while (current != null) {
            list.add(current);
            current = current.next;
        }
        
        int n = list.size();
        for (int i = 0; i < n / k; i++) {
            int start = i * k;
            int end = start + k - 1;
            while (start < end) {
                ListNode temp = list.get(start);
                list.set(start, list.get(end));
                list.set(end, temp);
                start++;
                end--;
            }
        }
        
        for (int i = 0; i < n - 1; i++) {
            list.get(i).next = list.get(i + 1);
        }
        list.get(n - 1).next = null;
        
        return list.get(0);
    }
}
